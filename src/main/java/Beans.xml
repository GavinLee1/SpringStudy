<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd "
	>

	<context:annotation-config/>

	<bean id="message" class="com.gavin.springStudy.bean.Message" init-method="init" destroy-method="destroy">
		<property name="message" value="Hello World!"/>
	</bean>
	
	<!--  <bean class="com.gavin.springStudy.beanPostProcessor.initMessage" /> -->
	
	<bean id="messageParent" class="com.gavin.springStudy.bean.MessageParent">
		<property name="message1" value="Hello Parent!"/>
		<property name="message2" value="Namaste India!"/>
	</bean>
	
	<bean id="messageChild" class="com.gavin.springStudy.bean.MessageChild" parent="messageParent">
		<property name="message1" value="Hello Chile!"/>
		<property name="message3" value="Hello Second World!"/>
	</bean>
	
	<bean id="textEditor" class="com.gavin.springStudy.bean.TextEditor">
		<constructor-arg ref="spellChecker"/>
	</bean>
	
	<bean id="spellChecker" class="com.gavin.springStudy.bean.SpellChecker">
	</bean>

	<bean id="javaCollection" class="com.gavin.springStudy.bean.JavaCollection">
		<!-- results in a setAddressList(java.util.List) call -->
		<property name="addressList">
			<list>
				<value>INDIA</value>
				<value>Pakistan</value>
				<value>USA</value>
				<value>USA</value>
			</list>
		</property>
		<!-- results in a setAddressSet(java.util.Set) call -->
		<property name="addressSet">
			<set>
				<value>INDIA</value>
				<value>Pakistan</value>
				<value>USA</value>
				<value>USA</value>
			</set>
		</property>
		<!-- results in a setAddressMap(java.util.Map) call -->
		<property name="addressMap">
			<map>
				<entry key="1" value="INDIA" />
				<entry key="2" value="Pakistan" />
				<entry key="3" value="USA" />
				<entry key="4" value="USA" />
			</map>
		</property>
		<!-- results in a setAddressProp(java.util.Properties) call -->
		<property name="addressProp">
			<props>
				<prop key="one">INDIA</prop>
				<prop key="two">Pakistan</prop>
				<prop key="three">USA</prop>
				<prop key="four">USA</prop>
			</props>
		</property>
	</bean>
	
	<bean id="autowireExample" class="com.gavin.springStudy.bean.AutowireExample">
	</bean>
	
	<bean id="autoExample" class="com.gavin.springStudy.bean.AutoExample">
	</bean>
	
	<bean id="postConstructExample" class="com.gavin.springStudy.bean.PostConstructExample" init-method="init" destroy-method="destroy">
		<property name="message" value="Hello world!"/>
	</bean>
	
	<!-- 
	<aop:config>
		<aop:aspect id="log" ref="logging">
			<aop:pointcut id="selectAll"
				expression="execution(* com.gavin.springStudy.aop.Student.getName(..))" />
			<aop:before pointcut-ref="selectAll" method="beforeAdvice" />
			<aop:after pointcut-ref="selectAll" method="afterAdvice" />
			<aop:after-returning pointcut-ref="selectAll"
				returning="retVal" method="afterReturningAdvice" />
			<aop:after-throwing pointcut-ref="selectAll"
				throwing="ex" method="AfterThrowingAdvice" />
		</aop:aspect>
	</aop:config> -->
	<aop:aspectj-autoproxy/>
	
	<bean id="student" class="com.gavin.springStudy.aop.Student">
		<property name="age" value="21"/>
		<property name="name" value="steven"/>
	</bean>
	<bean id="logging" class="com.gavin.springStudy.aop.Logging">
	</bean>
	
	<bean id="loggingAspect" class="com.gavin.springStudy.aopAspect.LoggingAspect">
	</bean>

	<!-- Initialization for data source -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/springstudy" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>
	<!-- Definition for studentJDBCTemplate bean -->
	<bean id="studentJDBCTemplate" class="com.gavin.springStudy.JDBCTemplate.StudentJDBCTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	
</beans>